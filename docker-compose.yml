version: '3.7'

services:
  web:
    build:
      context: ./
      dockerfile: Dockerfile
    command: poetry run gunicorn hackadoo.wsgi:application --bind 0.0.0.0:8000
    volumes:
      - static_volume:/home/app/web/static
    expose:
      - 8000
    env_file:
      - ./.env.prod
    depends_on:
      - db
    networks:
      - private
    restart: unless-stopped

  db:
    image: postgres:12.0-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    env_file:
      - ./.env.prod.db
    networks:
      - private
    restart: unless-stopped

  nginx:
    build: ./nginx
    volumes:
      - static_volume:/home/app/web/static
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.hackadoo.entrypoints=http"
      - "traefik.http.routers.hackadoo.rule=Host(`hackadoo.teamna.me`)"
      - "traefik.http.middlewares.hackadoo-https-redirect.redirectscheme.scheme=https"
      - "traefik.http.routers.hackadoo.middlewares=hackadoo-https-redirect"
      - "traefik.http.routers.hackadoo-secure.entrypoints=https"
      - "traefik.http.routers.hackadoo-secure.rule=Host(`hackadoo.teamna.me`)"
      - "traefik.http.routers.hackadoo-secure.tls=true"
      - "traefik.http.routers.hackadoo-secure.tls.certresolver=http"
      - "traefik.http.routers.hackadoo-secure.service=nginx-hackadoo@docker"
      - "traefik.docker.network=traefik-proxy"
    depends_on:
      - web
    networks:
      - private
      - public
      - traefik-proxy
    restart: unless-stopped

networks:
  private:
    driver: overlay
  public:
    external: true
  traefik-proxy:
    external: true

volumes:
  postgres_data:
  static_volume:
